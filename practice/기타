==> mdeia queries 
    : 범위 따른 색상 설정 
    // max : 최대로 커질 수 있는 한계, min : 최소로 작아질 수 있는 한계
    @media (min-width: 319px) and (max-width: 480px) {
      body {
        background-color: lightsalmon; }
    }
    @media (min-width: 481px) and (max-width: 1200px) {
      body {
        background-color: powderblue;
      }
    }
    @media (min-width: 1201px) and (max-width: 1600px) {
      body {
        background-color: limegreen;
      }
    }
    @media (min-width: 1601px) {
      body {
        background-color: seagreen;
      }
    }



==> flexbox
*** height: 100vh;                  -> vh(viewport heigh) 사용 중인 화면(뷰포트)의 전체 높이를 기준으로 비율
                                      100vh -> 요소가 화면 높이 전체를 차지하도록 만듬 / 전체 높이(100%)와 동일 / 창의 높이에 따라 동적으로 크기가 조정

    : https://studiomeal.com/archives/197
    display: flex;                 -> 해당 부분 안에 아이템만 다닥 붙음
    display: flex-box;             -> 해당 부분 전체 범위가 같이 flex하게 움직임

    gap: 1rem;                     -> 해당 부분 안에 아이템 간의 간격격

    inline-flex;                   ->
    inline-flexbox;                ->

    order : ;                      -> display:flex; 설정 후 oreder값으로 위치변경 // 기본값은 0임 

    flex-direction : ;             -> flex 방향을 세로/가로 중에 선택
      row;                         -> 요소들을 텍스트의 방향과 동일하게 정렬합니다.
      row-reverse;                 -> 요소들을 텍스트의 반대 방향으로 정렬합니다.
      column;                      -> 요소들을 위에서 아래로 정렬합니다.
      column-reverse;              -> 요소들을 아래에서 위로 정렬합니다.

    flex-basis : 10px;             -> 설정한 axis 방향에 따라 10px만큼 간격을 둔다
      영향력 : flex-basis < width < max-width, min-width
    flex-grow: ;                 -> Flex Container에 공간이 남을 경우 Flex Item의 flex-basis 크기가 얼마나 더 할당 가능한지 나타내는 속성
    flex-shrink: ;               -> Flex Container에 공간이 부족해질 때 Flex Item의 axis 방향 크기가 얼마나 줄어들 수 있는지 지정하는 값
    flex: 1 1 0;                 -> grow shrink basis 순서

    justify-content : ;            -> 메인축을 따라 정렬을 정의하는 프로퍼티
      flex-start;                  -> 요소들을 컨테이너의 왼쪽으로 정렬합니다.
      flex-end;                    -> 요소들을 컨테이너의 오른쪽으로 정렬합니다.
      center;                      -> 요소들을 컨테이너의 가운데로 정렬합니다.
      space-between;               -> 요소들 사이에 동일한 간격을 둡니다.
      space-around;                -> 요소들 주위에 동일한 간격을 둡니다.

    align-items : ;                -> 메인축의 수직축를 따라 정렬되는 방식을 정의하는 프로퍼티
      flex-start;                  -> 요소들을 컨테이너의 꼭대기로 정렬합니다.
      flex-end;                    -> 요소들을 컨테이너의 바닥으로 정렬합니다.
      center;                      -> 요소들을 컨테이너의 세로선 상의 가운데로 정렬합니다.
      baseline;                    -> 요소들을 컨테이너의 시작 위치에 정렬합니다.
      stretch;                     -> 요소들을 컨테이너에 맞도록 늘립니다.

    align-self : ;                 -> 개별 요소에 적용할 수 있는 또 다른 속성

    align-content : ;              -> 여러 줄들 사이의 간격
      flex-start;                  -> 여러 줄들을 컨테이너의 꼭대기에 정렬합니다.
      flex-end;                    -> 여러 줄들을 컨테이너의 바닥에 정렬합니다.
      center;                      -> 여러 줄들을 세로선 상의 가운데에 정렬합니다.
      space-between;               -> 여러 줄들 사이에 동일한 간격을 둡니다.
      space-around;                -> 여러 줄들 주위에 동일한 간격을 둡니다.
      stretch;                     -> 여러 줄들을 컨테이너에 맞도록 늘립니다.

    flex-wrap : ;                  -> 정렬설정
      nowrap;                      -> 모든 요소들을 한 줄에 정렬합니다.
      wrap;                        -> 요소들을 여러 줄에 걸쳐 정렬합니다.
      wrap-reverse;                -> 요소들을 여러 줄에 걸쳐 반대로 정렬합니다.
    flex-flow : ;                  -> flex-direction + flex-wrap ==> flex-flow: row wrap



==> grid
  display: grid;
    order : ;                      -> display:grid; 설정 후 oreder값으로 위치변경 // 기본값은 0임 
    grid-template-rows: ;            -> 가로 비율
    grid-template-columns: repeat(2, 200px);         -> 세로 비율 // 200px높이의 2줄
    grid-template: 100px  minmax(400px,800px)/ 400px auto;  -> 가로 100px 최소400px,최대800px / 세로 400px 전체에서400px을뺀나머지
    
    grid-column: 2 / 4;              -> 두번째 수직선에서 네번째 수직선까지
      grid-column: span 2/4;         -> 4번재줄부터 2번째줄까지
   
    grid-column-start: 3;            -> 세로 기준으로 3번째칸에서 시작
    grid-column-end: 5;              -> 세로 기준으로 5번째칸에서 마감
      grid-column-end: span 2;       -> 세로 기준으로 너비 2만큼
    
    grid-area: 1 / 1 / 3 / 6;        -> grid-row-start, grid-column-start, grid-row-end, grid-column-end순
    ;                                   각 해당 줄에서 시작, 각 해당 줄에서 마감



==> bootstrap
    sm    -> mobile
    md    -> ipad
    lg    -> laptop
    xl    -> desktop
    xxl  
  col-sm-12  -> 모바일은 100%
    <div class="col-sm-6 col-xl-12">50% desktop, 100% mobile</div>

    laptop일 때 비율 6:3:3 / mobile일 때 비율 100:50:50 / 그 이하 일때 길이 10
      <div class="col-lg-6 col-sm-12 col-10">column/div>
      <div class="col-lg-3 col-sm-6 col-10">column/div>
      <div class="col-lg-3 col-sm-6 col-10">column/div>


      <div class="col-xxl-1 col-xl-2 col-lg-4 col-md-6">Column 1</div>
      <div class="col-xxl-11 col-xl-10 col-lg-8 col-md-6">Column 2</div>



