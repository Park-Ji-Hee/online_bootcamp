==> index 색상 스타일 적용
    <h1 style="color: blue;">Style Me in Blue!</h1>

==> internal 색상 스타일 적용
    <head>
        <style>   
            h1 {
                color: red;
            }
        </style>
    </head>

==> external 색상 스타일 적용
    1. html 파일
        <head>   
            <link rel="stylesheet" href="./style.css">
        </head>
    2. css 파일
        h1 {
            color: green;
        }


*{}  : 모두에게 적용하라는 의미

.{}  : 해당 클래스에 있는 전체에 적용

#{}  : 해당 아이디에 있는 것에 적용 (유일함)


==> p를 빨간색으로
    p {
        color: red;
    }
==> 'id-selector-demo'라는 id를 초록색으로
    #id-selector-demo {
        color: green;
    }
==> 'note'라는 클래스의 'value'라는 attribute가 '4'인 것만 파란색으로    
    .note[value="4"] {
        color: blue;
    }
==> li에서서 'value'라는 attribute가 '4'인 것만 파란색으로      
    li[value="4"] {
        color: blue;
    }
==> 전체를 중간배열로    
    * {
        text-align: center;
    }


em : 상위요소 대비 글꼴 크기
    font-size: 1.5;  ==> 상위요소 대비 1.5배

rem : 루트요소 대비 글꼴 크기
    font-size: 1.5;  ==> 루트요소 대비 1.5배

==> 둘레 너비가 다를 때는 색상이랑 너비랑 구별해서 작성하기
    background-color: green;
    border: solid black;
    border-width: 20px 10px;
    margin-left: 260px;

==> 문자 모두 대문자로 바꾸기기
    text-transform: uppercase;


==> 띄어져 있는 같은 class안에서는 나중에 써있는 class가 인식됨
==> 같은 class와 id 사이에서는 id가 최종 인식됨


==> 해당 클레스 안에 있는 p 전체에 설정
    // p 전체가 아닌 특정 클래스 안의 p만 설정하고 싶을 경우 사용
    .클래스이름 p {
    }

==> h1, h2 둘다 블루바이올렛으로 색상변경경
    h1, h2 {
        color: blueviolet;
    }

==> box글래스 안에 있는 p 색상 설정
    // box와 p는 부모-자식 간의 관계여야 함
    .box > p {
        color: firebrick;
    }

==> box글래스 안에 있는 li 설정
    .box li {
        color: blue;
    }

==> li 요소 안의 done클래스 해당하는 값 설정
    // id값은 #id넣으면 됨 + class와 id간의 순서는 상관없음
    li.done {
        color: green;
    }

==> ul이라는 상위 요소에 p요소 done클래스 값 설정
    ul p.done {
        font-size: 0.5rem;}

==> 우선순위를 강제적으로 바꿀 때 -> 다른거 무시하고 이거부터 넣겠다!!
color:#fff !important;


==> postion
    relative
        : 상대적 위치 // 바로 위 static의 값에 따른 상대적 위치치

    absolute
         : 부모 중에 position이 relative, fixed, absolute 하나라도 있으면 그 부모를 기준으로 절대적으로 움직임
           일반적으로 absolute를 쓸 경우, 기준이 될 부모에게 position: relative; 를 부여

    fixed
         : viewport(window 기준)를 기준으로 배치 // 스크롤 내려도 같은위치에 따라오는 광고 같은 것들들

    sticky
         : 원래자리에 있다가 스크롤에 따라 지정된 위치에 배치 // 영화관 사이트 상단 목록 같은 경우

==> 모서리 둥글게
    원 // 1개 일때는 그 값이 네 모서리에 동일하게 적용 -> border-radius: 50%;
    시계방향으로 적용됨 -> border-radius: 10px 20px 30px 40px;
    3개일떄 // 30 10 50 10 으로 적용됨 ->  border-radius: 30px 10px 50px;


==. display
    : 기본으로 block
    나란히 붙일 수 있음 => display: inline;
    블록 속성을 갖지만 나란히 붙일 수 있음 => display: inline-block;


==> float
    : 기본 레이아웃 흐름에서 벗어나 요소의 모서리가 페이지의 왼쪽이나 오른쪽에 이동하는 것
    none  -> 요소를 떠 있게 하지 않는다. (기본값)
    right -> 요소를 오른쪽으로 이동시킨다
    left  -> 요소를 왼쪽으로 이동시킨다.



